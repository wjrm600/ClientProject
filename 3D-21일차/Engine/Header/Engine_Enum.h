#ifndef Engine_Enum_h__
#define Engine_Enum_h__

namespace Engine
{
	enum WINMODE { MODE_FULL, MODE_WIN };

	enum RESOURCETYPE { RESOURCE_STATIC, RESOURCE_LOGO, RESOURCE_STAGE, RESOURCE_END };

	enum BUFFERID { BUFFER_TRICOL, BUFFER_RCTEX, BUFFER_TERRAINTEX, BUFFER_CUBETEX, BUFFER_PTTEX, BUFFER_INRCTEX };

	enum TEXTURETYPE { TEX_NORMAL, TEX_CUBE, TEX_END };

	// ID_DYNAMIC : 실시간 업데이트가 필요한 컴포넌트
	enum COMPONENTID { ID_DYNAMIC, ID_STATIC, ID_END };

	enum INFO			{ INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };
	enum ROTATION		{ ROT_X, ROT_Y, ROT_Z, ROT_END };
	
	enum RENDERID		{ RENDER_PRIORITY, RENDER_NONALPHA, RENDER_ALPHA, RENDER_UI, RENDER_END };
	
	enum COLLTYPE		{ COL_FALSE, COL_TRUE, COL_END };

	enum MESHTYPE		{ TYPE_STATIC, TYPE_DYNAMIC, TYPE_NAVI, TYPE_COLLIDER, TYPE_END };

	enum ANGLE			{ ANGLE_X, ANGLE_Y, ANGLE_Z, ANGLE_END };


	enum MOUSEKEYSTATE	{ DIM_LB, DIM_RB, DIM_MB, DIM_END };
	enum MOUSEMOVESTATE { DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };

	enum PLAYERWALKDIRECTION { PWD_UP, PWD_DOWN, PWD_LEFT, PWD_RIGHT, PWD_END };
	enum PLAYERMOVESTATE { PMS_CLIMBUP, PMS_CLIMBDOWN,PMS_FRONTJUMP,PMS_END};
	enum PLAYERHEIGHTCOLLISIONSTATE {PHCS_ON, PHCS_SIDE, PHCS_END};

	enum COLLIDERHEIGHT{ CH_LOW, CH_HIGH, CH_END};
}

#endif // Engine_Enum_h__
